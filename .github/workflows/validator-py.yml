name: Validator (Python)

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: pip install protobuf pytest
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release -o dist -m validator/py/Cargo.toml
    - name: Install wheels
      run: pip install --find-links=dist substrait-validator
    - name: Test
      working-directory: validator/py/tests
      run: pytest
    - name: Upload wheels
      if: "startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: pip install protobuf pytest
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist -m validator/py/Cargo.toml
    - name: Install wheels
      run: pip install --find-links=dist substrait-validator
    - name: Test
      working-directory: validator/py/tests
      run: pytest
    - name: Upload wheels
      if: "startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: python3 -m pip install protobuf pytest
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist --universal2 -m validator/py/Cargo.toml
    - name: Install wheels
      run: python3 -m pip install --find-links=dist substrait-validator
    - name: Test
      working-directory: validator/py/tests
      run: python3 -m pytest
    - name: Upload wheels
      if: "startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
