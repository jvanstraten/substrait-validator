name: Validator (Python)

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        type: [wheel]
        include:
        - os: ubuntu-latest
          type: sdist
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install sdist-only dependencies
      if: ${{ matrix.type == 'sdist' }}
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: sdist-only build prep
      if: ${{ matrix.type == 'sdist' }}
      working-directory: validator/rs
      run: cargo check
      # ^ this ensures that its build.rs is run, which is all we need. Sadly
      # there doesn't seem to be a way to do this that doesn't pull in all
      # normal dependencies: https://github.com/rust-lang/cargo/issues/7178
    - name: Install build dependencies
      run: python3 -m pip install --upgrade pip maturin
    - name: Prepare build environment
      working-directory: validator/py
      run: python3 prepare_build.py populate
    - name: Create sdist
      if: ${{ matrix.type == 'sdist' }}
      uses: messense/maturin-action@v1
      with:
        command: sdist
        args: -o dist -m validator/py/Cargo.toml
    - name: Build manylinux wheels
      if: ${{ matrix.type == 'wheel' && matrix.os == 'ubuntu-latest' }}
      uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release --no-sdist -o dist -m validator/py/Cargo.toml
    - name: Build Windows wheels
      if: ${{ matrix.type == 'wheel' && matrix.os == 'windows-latest' }}
      uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist -m validator/py/Cargo.toml
    - name: Build MacOS wheels
      if: ${{ matrix.type == 'wheel' && matrix.os == 'macos-latest' }}
      uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist --universal2 -m validator/py/Cargo.toml
    - name: Install runtime dependencies
      run: python3 -m pip install --upgrade protobuf pytest click pyyaml git+https://github.com/saulpw/jsom.git@d41b2b4
    - name: Install generated sdist
      if: ${{ matrix.type == 'sdist' }}
      run: python3 -m pip install dist/substrait_validator-*.tar.gz
    - name: Install generated wheel
      if: ${{ matrix.type == 'wheel' }}
      run: python3 -m pip install --no-index --find-links=dist substrait-validator
    - name: Test
      working-directory: validator/py/tests
      run: python3 -m pytest
    - name: Upload wheels
      if: "startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ build ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
